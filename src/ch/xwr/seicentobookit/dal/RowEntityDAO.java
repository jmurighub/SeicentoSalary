
package ch.xwr.seicentobookit.dal;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.ParameterExpression;
import javax.persistence.criteria.Root;

import com.xdev.dal.JPADAO;

import ch.xwr.seicentobookit.entities.RowEntity;
import ch.xwr.seicentobookit.entities.RowEntity_;

/**
 * Home object for domain model class Entity.
 * 
 * @see RowEntity
 */
public class RowEntityDAO extends JPADAO<RowEntity, Long> {
	public RowEntityDAO() {
		super(RowEntity.class);
	}
	
	public RowEntity findEntity(String name){		
		return (RowEntity) findByName(name).get(0);		
	}

	/**
	 * @queryMethod Do not edit, method is generated by editor!
	 */
	public List<RowEntity> findByName(String name) {
		EntityManager entityManager = em();
	
		CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();
	
		ParameterExpression<String> nameParameter = criteriaBuilder.parameter(String.class, "name");
	
		CriteriaQuery<RowEntity> criteriaQuery = criteriaBuilder.createQuery(RowEntity.class);
	
		Root<RowEntity> root = criteriaQuery.from(RowEntity.class);
	
		criteriaQuery.where(criteriaBuilder.equal(root.get(RowEntity_.entName), nameParameter));
	
		TypedQuery<RowEntity> query = entityManager.createQuery(criteriaQuery);
		query.setParameter(nameParameter, name);
		return query.getResultList();
	}
	
}