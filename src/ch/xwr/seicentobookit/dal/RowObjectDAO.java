
package ch.xwr.seicentobookit.dal;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.ParameterExpression;
import javax.persistence.criteria.Root;

import com.xdev.dal.JPADAO;

import ch.xwr.seicentobookit.entities.RowEntity;
import ch.xwr.seicentobookit.entities.RowObject;
import ch.xwr.seicentobookit.entities.RowObject_;

/**
 * Home object for domain model class RowObject.
 * 
 * @see RowObject
 */
public class RowObjectDAO extends JPADAO<RowObject, Long> {
	public RowObjectDAO() {
		super(RowObject.class);
	}
	
	public RowObject getObjectBase(String entName, long id) 
	{
		RowEntityDAO entDao = new RowEntityDAO();
		RowEntity ent = entDao.findEntity(entName);

		List<RowObject> li = findObjectBase(ent, id);
		if (li.size() == 0) return null;
		return (RowObject) li.get(0);
	}

	/**
	 * @queryMethod Do not edit, method is generated by editor!
	 */
	public List<RowObject> findObjectBase(RowEntity ent, long id) {
		EntityManager entityManager = em();
	
		CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();
	
		ParameterExpression<RowEntity> entParameter = criteriaBuilder.parameter(RowEntity.class, "ent");
		ParameterExpression<Long> idParameter = criteriaBuilder.parameter(Long.class, "id");
	
		CriteriaQuery<RowObject> criteriaQuery = criteriaBuilder.createQuery(RowObject.class);
	
		Root<RowObject> root = criteriaQuery.from(RowObject.class);
	
		criteriaQuery.where(criteriaBuilder.and(criteriaBuilder.equal(root.get(RowObject_.objRowId), idParameter),
				criteriaBuilder.equal(root.get(RowObject_.rowEntity), entParameter)));
	
		TypedQuery<RowObject> query = entityManager.createQuery(criteriaQuery);
		query.setParameter(entParameter, ent);
		query.setParameter(idParameter, id);
		return query.getResultList();
	}		
}